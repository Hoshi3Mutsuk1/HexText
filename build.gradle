plugins {
    id 'fabric-loom' version '1.8-SNAPSHOT'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm" version "1.9.0"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}


repositories {
    mavenCentral()
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
    maven { url = "https://maven.blamejared.com/" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://maven.terraformersmc.com/releases" }
    maven { url = "https://maven.ladysnake.org/releases" }
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://maven.terraformersmc.com/" }
    maven {
        url "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
//    mappings loom.officialMojangMappings()
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.19.2:2022.11.27@zip")
    }

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "at.petra-k.paucal:paucal-common-${project.minecraft_version}:${project.paucal_version}"
    modImplementation "vazkii.patchouli:Patchouli:${project.minecraft_version}-${project.patchouli_version}-FABRIC"
    modImplementation("at.petra-k.hexcasting:hexcasting-fabric-${project.minecraft_version}:${project.hexcasting_version}") {
        exclude module: "phosphor"
        exclude module: "lithium"
    }

    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-item:${project.cca_version}"

    modRuntimeOnly "maven.modrinth:hexgloop:${project.minecraft_version}-${project.hexgloop_version}-fabric"
    modRuntimeOnly "maven.modrinth:wnboi:${project.wnboi_version}-fabric"
    modRuntimeOnly ("dev.architectury:architectury-fabric:${architectury_version}") {
        exclude group: "net.fabricmc", module: "fabric-loader"
    }
    modImplementation "maven.modrinth:moreiotas:${moreiotas_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release.set(targetJavaVersion)
}


java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}
